{"version":3,"sources":["../../src/zod/breedrecord.ts"],"sourcesContent":["import * as z from \"zod\"\nimport { CompleteRabbit, RabbitModel } from \"./index\"\n\nexport const _BreedRecordModel = z.object({\n  id: z.string(),\n  breedDate: z.date(),\n  description: z.string().nullish(),\n  sireId: z.string().nullish(),\n  damId: z.string().nullish(),\n  damWeight: z.string(),\n  testDate: z.date().nullish(),\n  expectedKindleDate: z.date().nullish(),\n  nestBoxDate: z.date().nullish(),\n  kindleDate: z.date().nullish(),\n  noKits: z.boolean().nullish(),\n  weanDate: z.date().nullish(),\n  noWean: z.boolean().nullish(),\n  weightMF: z.string().nullish(),\n  createdAt: z.date(),\n  updateAt: z.date(),\n})\n\nexport interface CompleteBreedRecord extends z.infer<typeof _BreedRecordModel> {\n  Sire?: CompleteRabbit | null\n  Dam?: CompleteRabbit | null\n}\n\n/**\n * BreedRecordModel contains all relations on your model in addition to the scalars\n *\n * NOTE: Lazy required in case of potential circular dependencies within schema\n */\nexport const BreedRecordModel: z.ZodSchema<CompleteBreedRecord> = z.lazy(() => _BreedRecordModel.extend({\n  Sire: RabbitModel.nullish(),\n  Dam: RabbitModel.nullish(),\n}))\n"],"names":["z","RabbitModel","_BreedRecordModel","object","id","string","breedDate","date","description","nullish","sireId","damId","damWeight","testDate","expectedKindleDate","nestBoxDate","kindleDate","noKits","boolean","weanDate","noWean","weightMF","createdAt","updateAt","BreedRecordModel","lazy","extend","Sire","Dam"],"mappings":"AAAA,YAAYA,OAAO,MAAK;AACxB,SAAyBC,WAAW,QAAQ,UAAS;AAErD,OAAO,IAAMC,oBAAoBF,EAAEG,MAAM,CAAC;IACxCC,IAAIJ,EAAEK,MAAM;IACZC,WAAWN,EAAEO,IAAI;IACjBC,aAAaR,EAAEK,MAAM,GAAGI,OAAO;IAC/BC,QAAQV,EAAEK,MAAM,GAAGI,OAAO;IAC1BE,OAAOX,EAAEK,MAAM,GAAGI,OAAO;IACzBG,WAAWZ,EAAEK,MAAM;IACnBQ,UAAUb,EAAEO,IAAI,GAAGE,OAAO;IAC1BK,oBAAoBd,EAAEO,IAAI,GAAGE,OAAO;IACpCM,aAAaf,EAAEO,IAAI,GAAGE,OAAO;IAC7BO,YAAYhB,EAAEO,IAAI,GAAGE,OAAO;IAC5BQ,QAAQjB,EAAEkB,OAAO,GAAGT,OAAO;IAC3BU,UAAUnB,EAAEO,IAAI,GAAGE,OAAO;IAC1BW,QAAQpB,EAAEkB,OAAO,GAAGT,OAAO;IAC3BY,UAAUrB,EAAEK,MAAM,GAAGI,OAAO;IAC5Ba,WAAWtB,EAAEO,IAAI;IACjBgB,UAAUvB,EAAEO,IAAI;AAClB,GAAE;AAOF;;;;CAIC,GACD,OAAO,IAAMiB,mBAAqDxB,EAAEyB,IAAI,CAAC;WAAMvB,kBAAkBwB,MAAM,CAAC;QACtGC,MAAM1B,YAAYQ,OAAO;QACzBmB,KAAK3B,YAAYQ,OAAO;IAC1B;GAAG"}