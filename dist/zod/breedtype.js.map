{"version":3,"sources":["../../src/zod/breedtype.ts"],"sourcesContent":["import * as z from \"zod\"\nimport { CompleteRabbit, RabbitModel } from \"./index\"\n\nexport const _BreedTypeModel = z.object({\n  id: z.string(),\n  name: z.string(),\n  createdAt: z.date(),\n  updateAt: z.date(),\n})\n\nexport interface CompleteBreedType extends z.infer<typeof _BreedTypeModel> {\n  Rabbit: CompleteRabbit[]\n}\n\n/**\n * BreedTypeModel contains all relations on your model in addition to the scalars\n *\n * NOTE: Lazy required in case of potential circular dependencies within schema\n */\nexport const BreedTypeModel: z.ZodSchema<CompleteBreedType> = z.lazy(() => _BreedTypeModel.extend({\n  Rabbit: RabbitModel.array(),\n}))\n"],"names":["z","RabbitModel","_BreedTypeModel","object","id","string","name","createdAt","date","updateAt","BreedTypeModel","lazy","extend","Rabbit","array"],"mappings":"AAAA,YAAYA,OAAO,MAAK;AACxB,SAAyBC,WAAW,QAAQ,UAAS;AAErD,OAAO,IAAMC,kBAAkBF,EAAEG,MAAM,CAAC;IACtCC,IAAIJ,EAAEK,MAAM;IACZC,MAAMN,EAAEK,MAAM;IACdE,WAAWP,EAAEQ,IAAI;IACjBC,UAAUT,EAAEQ,IAAI;AAClB,GAAE;AAMF;;;;CAIC,GACD,OAAO,IAAME,iBAAiDV,EAAEW,IAAI,CAAC;WAAMT,gBAAgBU,MAAM,CAAC;QAChGC,QAAQZ,YAAYa,KAAK;IAC3B;GAAG"}